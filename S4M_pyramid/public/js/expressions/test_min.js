run_tests=function(c){var a=c.options;var b=a.data;check_num_points(a,b,c);check_x_labels(a,b,c);check_horizontal_lines(a,c);check_legend(a,b,c);check_titles(a,c);check_axis(a,c);return c};check_axis=function(b,f){var e=document.getElementsByClassName("tick");var c=1000;var a=0;for(var h in e){var g=parseFloat(e[h].innerHTML);if(g<c){c=g}if(g>a){a=g}}if(a<f.max_val){console.log("Ticks max val was too small")}if(c>f.min_val){console.log("Ticks min val was too large")}console.log("check for axis complete, num ticks: ",e.length)};check_titles=function(j,i){var f=j.title;var e=j.title_text_size;var h=document.getElementById("title-"+f);if(h.innerHTML!==f||h.style.fontSize!==e){console.log("Error with text of main title: "+f)}var a=j.text_size;for(var c in j.subtitles){var b=j.subtitles[c];var g=document.getElementById("subtitle-"+b);if(g.innerHTML!==b||g.style.fontSize!==a){console.log("Error with text of sub title: "+b)}}console.log("Titles and subTitles have been checked")};check_legend=function(m,f,k){var j=m.probes;for(var h in j){var e=j[h][0];var b=j[h][1].toUpperCase();var i=document.getElementById("legend-text-"+e);var g=document.getElementById("legend-rect-"+e);if(i.innerHTML!==e){console.log("Error with legend text: ",name)}var c=g.style.fill.toUpperCase();var l=parseFloat(g.getAttribute("height"));var a=parseFloat(g.getAttribute("width"));if(a!==m.legend_rect_size||l!==m.legend_rect_size){console.log("Error with legend rect size: ",name)}if(c!==b){console.log("Error with legend rect colour: ",name)}}console.log("Checked Legend for correct rectangles being displayed and legend text")};check_horizontal_lines=function(d,a){var m=d.horizontal_lines;var k=page_options.width;var f=d.text_size;var r=d3.scale.category20();for(var o=0;o<m.length;o++){var t=m[o][0];if(m[o][1]===undefined){var j=r}else{var j=m[o][1]}var g=m[o][2];var h=document.getElementById("horizontal-line-"+t);var e=document.getElementById("horizontal-line-text-"+t);var c=parseFloat(h.getAttribute("y1"));var b=parseFloat(h.getAttribute("y2"));var q=parseFloat(h.getAttribute("x1"));var p=parseFloat(h.getAttribute("x2"));var n=a.scaleY(a.max_val);var l=a.scaleY(a.min_val);var s=parseFloat(a.scaleY(g));if((p-q)!==k||c!==b||c!==s){console.log("Error with horizontal line positioning: ",t)}if(c>l||c<n){console.log("Error with horizontal line ouside bounds: ",t)}if(e.innerHTML!==t){console.log("Error with horizontal line text: ",t)}if(e.style.fontSize!==f){console.log("Error with horizontal line text size: ",t)}}console.log("Horizontal lines have been checked for spanning page, bounds, text_size and text")};check_x_labels=function(k,e,i){var a=0;for(var f in k.x_labels){var b=k.x_labels[f];var g=document.getElementById("xLabel-"+b.replace(/\ |(|)/g,""));var h=g.innerHTML;if(h!==b){console.log("Error in x labels with sample: ",b,h)}var c=g.style.fontFamily;var j=g.style.fontSize;if(c!==k.font_style){console.log("Error in style of x labels with sample: ",b)}if(j!==k.text_size){console.log("Error in size of x labels with sample: ",b)}}console.log("x labels have been checked for size, font, text")};check_num_points=function(b,g,f){var h=0;for(var i in g){var e=g[i];var c=document.getElementById("scatter-point-"+e.Sample_ID);var a=parseInt(c.getAttribute("r"));if(a!==b.circle_radius){console.log("error with following sample type: ",e.Sample_ID)}h++}console.log("Scatter points have been checked for size and number of points")};